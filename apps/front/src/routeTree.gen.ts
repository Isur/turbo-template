/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as AuthImport } from "./routes/auth";
import { Route as IndexImport } from "./routes/index";
import { Route as AuthRegisterImport } from "./routes/auth/register";
import { Route as AuthLoginImport } from "./routes/auth/login";
import { Route as AuthForgetPasswordImport } from "./routes/auth/forget-password";
import { Route as ProtectedProtectedImport } from "./routes/_protected/_protected";
import { Route as ProtectedProtectedTodosImport } from "./routes/_protected/_protected.todos";
import { Route as ProtectedProtectedTodosIdImport } from "./routes/_protected/_protected.todos.$id";

// Create/Update Routes

const AuthRoute = AuthImport.update({
  path: "/auth",
  getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
  path: "/",
  getParentRoute: () => rootRoute,
} as any);

const AuthRegisterRoute = AuthRegisterImport.update({
  path: "/register",
  getParentRoute: () => AuthRoute,
} as any);

const AuthLoginRoute = AuthLoginImport.update({
  path: "/login",
  getParentRoute: () => AuthRoute,
} as any);

const AuthForgetPasswordRoute = AuthForgetPasswordImport.update({
  path: "/forget-password",
  getParentRoute: () => AuthRoute,
} as any);

const ProtectedProtectedRoute = ProtectedProtectedImport.update({
  id: "/_protected/_protected",
  getParentRoute: () => rootRoute,
} as any);

const ProtectedProtectedTodosRoute = ProtectedProtectedTodosImport.update({
  path: "/todos",
  getParentRoute: () => ProtectedProtectedRoute,
} as any);

const ProtectedProtectedTodosIdRoute = ProtectedProtectedTodosIdImport.update({
  path: "/$id",
  getParentRoute: () => ProtectedProtectedTodosRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    "/auth": {
      preLoaderRoute: typeof AuthImport;
      parentRoute: typeof rootRoute;
    };
    "/_protected/_protected": {
      preLoaderRoute: typeof ProtectedProtectedImport;
      parentRoute: typeof rootRoute;
    };
    "/auth/forget-password": {
      preLoaderRoute: typeof AuthForgetPasswordImport;
      parentRoute: typeof AuthImport;
    };
    "/auth/login": {
      preLoaderRoute: typeof AuthLoginImport;
      parentRoute: typeof AuthImport;
    };
    "/auth/register": {
      preLoaderRoute: typeof AuthRegisterImport;
      parentRoute: typeof AuthImport;
    };
    "/_protected/_protected/todos": {
      preLoaderRoute: typeof ProtectedProtectedTodosImport;
      parentRoute: typeof ProtectedProtectedImport;
    };
    "/_protected/_protected/todos/$id": {
      preLoaderRoute: typeof ProtectedProtectedTodosIdImport;
      parentRoute: typeof ProtectedProtectedTodosImport;
    };
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  AuthRoute.addChildren([
    AuthForgetPasswordRoute,
    AuthLoginRoute,
    AuthRegisterRoute,
  ]),
  ProtectedProtectedRoute.addChildren([
    ProtectedProtectedTodosRoute.addChildren([ProtectedProtectedTodosIdRoute]),
  ]),
]);

/* prettier-ignore-end */
