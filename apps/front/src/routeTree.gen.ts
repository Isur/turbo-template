/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from "@tanstack/react-router";

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as IndexImport } from "./routes/index";
import { Route as AuthAuthImport } from "./routes/auth/_auth";
import { Route as ProtectedProtectedImport } from "./routes/_protected/_protected";
import { Route as AuthAuthRegisterImport } from "./routes/auth/_auth.register";
import { Route as AuthAuthLoginImport } from "./routes/auth/_auth.login";
import { Route as AuthAuthForgetPasswordImport } from "./routes/auth/_auth.forget-password";
import { Route as ProtectedProtectedTodosImport } from "./routes/_protected/_protected.todos";
import { Route as ProtectedProtectedTodosIdImport } from "./routes/_protected/_protected.todos.$id";

// Create Virtual Routes

const AuthImport = createFileRoute("/auth")();

// Create/Update Routes

const AuthRoute = AuthImport.update({
  path: "/auth",
  getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
  path: "/",
  getParentRoute: () => rootRoute,
} as any);

const AuthAuthRoute = AuthAuthImport.update({
  id: "/_auth",
  getParentRoute: () => AuthRoute,
} as any);

const ProtectedProtectedRoute = ProtectedProtectedImport.update({
  id: "/_protected/_protected",
  getParentRoute: () => rootRoute,
} as any);

const AuthAuthRegisterRoute = AuthAuthRegisterImport.update({
  path: "/register",
  getParentRoute: () => AuthAuthRoute,
} as any);

const AuthAuthLoginRoute = AuthAuthLoginImport.update({
  path: "/login",
  getParentRoute: () => AuthAuthRoute,
} as any);

const AuthAuthForgetPasswordRoute = AuthAuthForgetPasswordImport.update({
  path: "/forget-password",
  getParentRoute: () => AuthAuthRoute,
} as any);

const ProtectedProtectedTodosRoute = ProtectedProtectedTodosImport.update({
  path: "/todos",
  getParentRoute: () => ProtectedProtectedRoute,
} as any);

const ProtectedProtectedTodosIdRoute = ProtectedProtectedTodosIdImport.update({
  path: "/$id",
  getParentRoute: () => ProtectedProtectedTodosRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    "/_protected/_protected": {
      preLoaderRoute: typeof ProtectedProtectedImport;
      parentRoute: typeof rootRoute;
    };
    "/auth": {
      preLoaderRoute: typeof AuthImport;
      parentRoute: typeof rootRoute;
    };
    "/auth/_auth": {
      preLoaderRoute: typeof AuthAuthImport;
      parentRoute: typeof AuthRoute;
    };
    "/_protected/_protected/todos": {
      preLoaderRoute: typeof ProtectedProtectedTodosImport;
      parentRoute: typeof ProtectedProtectedImport;
    };
    "/auth/_auth/forget-password": {
      preLoaderRoute: typeof AuthAuthForgetPasswordImport;
      parentRoute: typeof AuthAuthImport;
    };
    "/auth/_auth/login": {
      preLoaderRoute: typeof AuthAuthLoginImport;
      parentRoute: typeof AuthAuthImport;
    };
    "/auth/_auth/register": {
      preLoaderRoute: typeof AuthAuthRegisterImport;
      parentRoute: typeof AuthAuthImport;
    };
    "/_protected/_protected/todos/$id": {
      preLoaderRoute: typeof ProtectedProtectedTodosIdImport;
      parentRoute: typeof ProtectedProtectedTodosImport;
    };
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  ProtectedProtectedRoute.addChildren([
    ProtectedProtectedTodosRoute.addChildren([ProtectedProtectedTodosIdRoute]),
  ]),
  AuthRoute.addChildren([
    AuthAuthRoute.addChildren([
      AuthAuthForgetPasswordRoute,
      AuthAuthLoginRoute,
      AuthAuthRegisterRoute,
    ]),
  ]),
]);

/* prettier-ignore-end */
